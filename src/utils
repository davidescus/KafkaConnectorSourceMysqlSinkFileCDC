# create docker network
docker network create kafka --driver bridge

# https://itnext.io/how-to-install-kafka-using-docker-a2b7c746cbdc
# run zookeeper latest version (zookeeper runs on 2181 port) telnet localhost 2181
# for production should have a cluster, and persistent volume
# ALLOW_ANONYMOUS_LOGIN=yes not for production, it is easy to connect at this moment
docker run -d --name zookeeper-server -p 2181:2181 --network kafka -e ALLOW_ANONYMOUS_LOGIN=yes bitnami/zookeeper:latest 

# run kafka one broker
docker run -d --name kafka-server1 -p 9092:9092 --network kafka -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181 -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 bitnami/kafka:latest

# https://medium.com/@migueldoctor/run-mysql-phpmyadmin-locally-in-3-steps-using-docker-74eb735fa1fc
# run mysql
docker run -d --name mysql --network kafka -e MYSQL_ROOT_PASSWORD=pass mysql:8.0.1

docker run -d \
  --name=quickstart-mysql \
  --net=host \
  -e MYSQL_ROOT_PASSWORD=confluent \
  -e MYSQL_USER=confluent \
  -e MYSQL_PASSWORD=confluent \
  -e MYSQL_DATABASE=connect_test \
  mysql:5.7

# run phpmyadmin and access it on: localhost:8081
docker run -d --name phpmyadmin --network kafka -p 8081:80 -e PMA_HOST=mysql phpmyadmin/phpmyadmin


# create mysql table
CREATE TABLE `transactions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `reference` varchar(64) NOT NULL,
  `usd_amount` int(12) NOT NULL DEFAULT '0',
  `timestamp` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `reference` (`reference`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4


########################
https://docs.confluent.io/5.0.0/installation/docker/docs/installation/connect-avro-jdbc.html

* zookeeper
* kafka
* Registry Schema



